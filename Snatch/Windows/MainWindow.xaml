<Window
    x:Class="Snatch.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Snatch.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Snatch"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="MainWindow"
    Width="500"
    AllowsTransparency="True"
    Background="Transparent"
    ShowInTaskbar="False"
    SizeToContent="Height"
    Visibility="Hidden"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.InputBindings>
        <KeyBinding Key="Q" Modifiers="Ctrl">
            <KeyBinding.Command>
                <local:CustomCommand Executed="QuitKeybinding" />
            </KeyBinding.Command>
        </KeyBinding>
        <KeyBinding Key="Esc">
            <KeyBinding.Command>
                <local:CustomCommand Executed="CloseWindowKeybinding" />
            </KeyBinding.Command>
        </KeyBinding>
        <KeyBinding Key="L" Modifiers="Ctrl+Shift">
            <KeyBinding.Command>
                <local:CustomCommand Executed="ClearKeybinding" />
            </KeyBinding.Command>
        </KeyBinding>
        <KeyBinding Key="P" Modifiers="Ctrl">
            <KeyBinding.Command>
                <local:CustomCommand Executed="PinKeybinding" />
            </KeyBinding.Command>
        </KeyBinding>
        <KeyBinding Key="P" Modifiers="Ctrl+Shift">
            <KeyBinding.Command>
                <local:CustomCommand Executed="TogglePinAllKeybinding" />
            </KeyBinding.Command>
        </KeyBinding>
        <KeyBinding Key="OemQuestion" Modifiers="Ctrl">
            <KeyBinding.Command>
                <local:CustomCommand Executed="ToggleCheatsheetKeybinding" />
            </KeyBinding.Command>
        </KeyBinding>
    </Window.InputBindings>

    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="{x:Type ListView}" TargetType="ListView">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="0,8,0,0" />
                <Setter Property="Visibility" Value="Collapsed" />

                <Style.Triggers>
                    <DataTrigger Binding="{Binding HasVisibleEntries}" Value="False">
                        <Setter Property="Margin" Value="0" />
                    </DataTrigger>

                    <DataTrigger Binding="{local:SettingBinding Path=OnboardingStep}" Value="1">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>

                    <DataTrigger Binding="{local:SettingBinding Path=ShowOnboarding}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
                <EventSetter Event="MouseDoubleClick" Handler="OnItemMouseDown" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="60" />
                <Setter Property="Padding" Value="16,8,16,8" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Foreground" Value="{StaticResource Gray600}" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border
                                Padding="{TemplateBinding Control.Padding}"
                                Background="{TemplateBinding Panel.Background}"
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                SnapsToDevicePixels="True">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsVisible}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <!--<DataTrigger.EnterActions>
              <BeginStoryboard>
                <Storyboard>
                  <DoubleAnimation
                    Storyboard.TargetProperty="Opacity"
                    From="1"
                    To="0"
                    Duration="0:0:.25" />
                  <DoubleAnimation
                    Storyboard.TargetProperty="Height"
                    From="34"
                    To="0"
                    Duration="0:0:.25" />
                </Storyboard>
              </BeginStoryboard>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard>
                <Storyboard FillBehavior="Stop">
                  <DoubleAnimation
                    Storyboard.TargetProperty="Opacity"
                    From="0"
                    To="1"
                    Duration="0:0:.25" />
                  <DoubleAnimation
                    Storyboard.TargetProperty="Height"
                    From="0"
                    To="34"
                    Duration="0:0:.25" />
                </Storyboard>
              </BeginStoryboard>
            </DataTrigger.ExitActions>-->
                    </DataTrigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource Primary900}" />
                        <Setter Property="Foreground" Value="{StaticResource Primary300}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--  Custom ContextMenu Style  -->
            <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="HasDropShadow" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border
                                Name="Border"
                                Margin="8"
                                Background="{StaticResource Primary800}"
                                BorderBrush="{StaticResource Primary900}"
                                BorderThickness="1"
                                CornerRadius="4">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect
                                        Direction="-90"
                                        Opacity="0.45"
                                        ShadowDepth="1.5"
                                        Softness="0.4"
                                        Color="Black" />
                                </Border.BitmapEffect>
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="True">
                                    <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                                    <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Separator  -->
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="Height" Value="1" />
                <Setter Property="Margin" Value="0,4,0,4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border BorderBrush="{StaticResource Primary900}" BorderThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  TopLevelHeader  -->
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border Name="Border">
                    <Grid>
                        <ContentPresenter
                            Margin="6,3,6,3"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsSubmenuOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Border
                                Name="SubmenuBorder"
                                Background="#FFFFFF"
                                BorderBrush="#888888"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                        <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource Primary600}" />
                        <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
                        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="#888888" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  TopLevelItem  -->
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
                <Border Name="Border">
                    <Grid>
                        <ContentPresenter
                            Margin="20,3,6,10"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter TargetName="Border" Property="Background" Value="Blue" />
                        <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="#888888" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  SubmenuItem  -->
            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border Name="Border">
                    <Grid>
                        <ContentPresenter
                            Name="Icon"
                            Margin="6,2,6,2"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            ContentSource="Icon" />
                        <Border
                            Name="Check"
                            Width="13"
                            Height="13"
                            Margin="6,0,6,0"
                            Background="#C0C0C0"
                            BorderBrush="#404040"
                            BorderThickness="1"
                            Visibility="Hidden">
                            <Path
                                Name="CheckMark"
                                Width="7"
                                Height="7"
                                Data="M 0 0 L 7 7 M 0 7 L 7 0"
                                SnapsToDevicePixels="False"
                                Stroke="#404040"
                                StrokeThickness="1"
                                Visibility="Visible" />
                        </Border>
                        <ContentPresenter
                            Name="HeaderHost"
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <TextBlock
                            Name="InputGestureText"
                            Grid.Column="2"
                            Margin="5,2,2,2"
                            Background="{StaticResource Primary600}"
                            DockPanel.Dock="Right"
                            Text="{TemplateBinding InputGestureText}" />
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsCheckable" Value="true">
                        <Setter TargetName="Check" Property="Visibility" Value="Hidden" />
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource Primary600}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="Yellow" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  SubmenuHeader  -->
            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border Name="Border">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            Name="Icon"
                            Margin="6,0,6,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            ContentSource="Icon" />
                        <ContentPresenter
                            Name="HeaderHost"
                            Grid.Column="1"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <TextBlock
                            x:Name="InputGestureText"
                            Grid.Column="2"
                            Margin="5,2,2,2"
                            DockPanel.Dock="Right"
                            Text="{TemplateBinding InputGestureText}" />
                        <Path
                            Grid.Column="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 0 7 L 4 3.5 Z"
                            Fill="#FFFFFF" />
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="-4"
                            IsOpen="{TemplateBinding IsSubmenuOpen}"
                            Placement="Left"
                            PopupAnimation="Slide">
                            <Border
                                Name="SubmenuBorder"
                                Margin="8"
                                Background="{StaticResource Primary800}"
                                BorderBrush="{StaticResource Primary900}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect
                                        Direction="-90"
                                        Opacity="0.45"
                                        ShadowDepth="1.5"
                                        Softness="0.4"
                                        Color="Black" />
                                </Border.BitmapEffect>
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource Primary600}" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="#888888" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  MenuItem Style  -->
            <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Border
            Margin="8"
            Background="{StaticResource Primary800}"
            BorderBrush="{StaticResource Primary900}"
            BorderThickness="1"
            CornerRadius="4">
            <Border.BitmapEffect>
                <DropShadowBitmapEffect
                    Direction="-90"
                    Opacity="0.45"
                    ShadowDepth="1.5"
                    Softness="0.4"
                    Color="Black" />
            </Border.BitmapEffect>
        </Border>

        <StackPanel
            Margin="8"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top">
            <controls:Onboarding />

            <controls:Header x:Name="HeaderRef">
                <controls:Header.Resources>
                    <Style TargetType="controls:Header">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{local:SettingBinding Path=OnboardingStep}" Value="1">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{local:SettingBinding Path=ShowOnboarding}" Value="False">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </controls:Header.Resources>
            </controls:Header>

            <controls:EmptyListView>
                <controls:EmptyListView.Resources>
                    <Style TargetType="controls:EmptyListView">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{local:SettingBinding Path=OnboardingStep}" Value="1">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{local:SettingBinding Path=ShowOnboarding}" Value="False">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </controls:EmptyListView.Resources>
            </controls:EmptyListView>

            <ListView
                Name="uiItems"
                MaxHeight="274"
                HorizontalAlignment="Stretch"
                FocusManager.IsFocusScope="False"
                Focusable="False"
                ItemsSource="{Binding Entries}"
                ScrollViewer.CanContentScroll="False"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                VirtualizingPanel.ScrollUnit="Pixel">
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type local:Entry}">
                        <Grid HorizontalAlignment="Stretch">
                            <!--  pin-indicator  -->
                            <Border
                                Grid.Column="0"
                                Width="4"
                                Margin="-40,0,0,0"
                                Background="{StaticResource Gray600}"
                                CornerRadius="4">

                                <Border.Resources>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPinned}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Margin">
                                                                <LinearThicknessKeyFrame KeyTime="0:0:.150" Value="8,0,0,0" />
                                                                <SplineThicknessKeyFrame KeyTime="0:0:0.450" Value="-16,0,0,0" />
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Margin">
                                                                <SplineThicknessKeyFrame KeyTime="0:0:0.125" Value="-40,0,0,0" />
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Resources>
                            </Border>
                            <!--  /pin-indicator  -->

                            <!--  entry-content  -->
                            <TextBlock
                                Grid.Column="1"
                                Height="40"
                                HorizontalAlignment="Left"
                                Background="Transparent"
                                Text="{Binding DisplayName}"
                                TextWrapping="WrapWithOverflow">

                                <TextBlock.Resources>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPinned}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Margin">
                                                                <SplineThicknessKeyFrame KeyTime="0:0:0.150" Value="0,0,0,0" />
                                                                <SplineThicknessKeyFrame KeyTime="0:0:0.250" Value="8,0,0,0" />
                                                                <SplineThicknessKeyFrame KeyTime="0:0:0.400" Value="0,0,0,0" />
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Margin">
                                                                <SplineThicknessKeyFrame KeyTime="0:0:0.125" Value="0,0,0,0" />
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="0">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="1">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="2">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Resources>
                            </TextBlock>

                            <Image Grid.Column="1" HorizontalAlignment="Left">

                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="0">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="1">
                                                <Setter Property="Source" Value="{Binding Thumbnail}" />
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="2">
                                                <Setter Property="Source" Value="{Binding Thumbnail}" />
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>

                            <TextBlock
                                Name="btnMenu"
                                Grid.Column="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                Background="Transparent"
                                ContextMenuService.IsEnabled="False"
                                PreviewMouseLeftButtonDown="btnMenu_Click"
                                Text="...">

                                <TextBlock.ContextMenu>
                                    <ContextMenu
                                        x:Name="menu"
                                        Placement="Bottom"
                                        PlacementRectangle="-10,0,0,15">
                                        <MenuItem x:Name="Menu_Pin" Click="MenuItem_Click">
                                            <MenuItem.Style>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="Header" Value="Pin" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsPinned}" Value="True">
                                                            <Setter Property="Header" Value="Unpin" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <Separator />
                                        <MenuItem
                                            x:Name="Menu_View"
                                            Click="MenuItem_Click"
                                            Header="View" />
                                        <MenuItem
                                            x:Name="Menu_SaveAs"
                                            Click="MenuItem_Click"
                                            Header="Save as..." />
                                        <Separator />
                                        <MenuItem
                                            x:Name="Menu_Remove"
                                            Click="MenuItem_Click"
                                            Header="Remove entry" />
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="White" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource Primary400}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <!--  /entry-content  -->

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="100*" />
                                <ColumnDefinition Width="10*" />
                            </Grid.ColumnDefinitions>
                        </Grid>

                        <DataTemplate.Triggers>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.150" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <!--  /entry-list  -->

            <controls:ShortcutList>
                <controls:ShortcutList.Resources>
                    <Style TargetType="controls:ShortcutList">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{local:SettingBinding Path=OnboardingStep}" Value="1">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{local:SettingBinding Path=ShowOnboarding}" Value="False">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </controls:ShortcutList.Resources>
            </controls:ShortcutList>
            <controls:SupportSection />
        </StackPanel>
    </Grid>
</Window>
